1. Согласно задания, мы создали три основных сущности: User, Hotel и Room.

2. Интерфейс DAO с ключевыми методами для работы с базами данных, и три его имплементации: RoomDAO, HotelDAO и RoomDAO.

3. Базы данных User, Hotel и Room хранятся в текстовых файлах. При запуске программа их считывает с помощью конструктора
   имплементаций DAO. При работе программы, по мере потребности, происходит синхронизация информации между программой
   и базами данных.

3. При имплементациях DAO мы реализовали патерн синглтон, чтоб исключить сбои при работе с базами данных.

4. Базы данных отелей, пользователей и комнат тесно связаны между собой, поэтому, при переопределении методов для баз
   данных, мы позаботились о том, чтоб при редактировании информации в одной из баз данных, в остальных базах также
   была произведена необходимая для правильной работы корректировка.

5. Созданы два метода с возможностью запуска программы. Первый из них мы назвали MainForAdmin, служит для
   администрирования и тестировки баз данных (наполнение баз, изменение информации об отелях, номерах, удаления
   элементов из баз).

6. Второй метод с возможностью запуска - MainForUser, являет собой пользовательский интерфейс системы поиска и
   резервирования гостиничных номеров. Пользователь может зарегистрироваться, войти под своим именем, осуществить
   поиск гостиниц и номеров, забронировать номер, посмотреть список забронированных им номеров, снять бронь.

7. При выходе из программы, и после новой загрузки, пользователь может заново войти под своим именем и паролем. Все
   изменения, сделанные им во время прошлого сеанса работы с программой, будут сохранены.


